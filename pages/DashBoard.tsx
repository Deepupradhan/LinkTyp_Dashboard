import Head from 'next/head'
import React, {  useContext, useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { Inter } from 'next/font/google'
import User from '.'
import Navbar from '@/components/Navbar'
import Links from '@/components/Links'
import MobileMockups from '@/components/MobileMockups'
import Appearance from '@/components/Appearance'
// import Analytics from '@/components/analytics'
import UserSettings from '@/components/UserSettings'
import axios from 'axios'
import SideNavbar from '@/components/Sidebar'
const inter = Inter({ subsets: ['latin'] })
import { UserContext } from './UserContext';
import Cookies from 'js-cookie';

export default function DashBoard() {

const [data, setData] = useState();

const token = Cookies.get('access_token');
  useEffect(() => {
    axios
      .get("https://api.linktyp.com/api/getdata", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((res) => {
        console.log(res);
        setData(res.data);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  console.log(data);

  // console.log(userData.data[0].containerLinks[0].link)
  const [activeComponent, setActiveComponent] = useState('link');

  const handleAppearanceClick = () => {
    setActiveComponent('appearance')
  }

  const handleLinkClick = () => {
    setActiveComponent('link')
  }

  const handleAnalyticsClick = () => {
    setActiveComponent('analytics')
  }

  const handleSettingsClick = () => {
    setActiveComponent('Settings')
  }



  // if (!userData || !userData.data || !userData.data[0] || !userData.data[0].containerLinks) {
  //   return <p>Loading...</p>;
  // }


  return (
    <>
      <div className='w-full bg-white scroll-smooth'>
        <Head>
          <title>Project Linktyp</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
       <nav>
       <Navbar 
            onAppearanceClick={handleAppearanceClick}
            onLinkClick={handleLinkClick}
            onAnalyticsClick={handleAnalyticsClick}
            onSettingsClick={handleSettingsClick} props={undefined}  />
       </nav>
        <div className='flex'>
          <div className='md:pt-20 pt-28 md:w-2/3 w-full'>
          {activeComponent === 'appearance' && <Appearance  />}
          {activeComponent === 'link' && <Links  />}
          {/* {activeComponent === 'analytics' && <Analytics />} */}
          {activeComponent === 'Settings' && < UserSettings />}
          </div>
          <div className='md:w-1/3 hidden md:block'>
            <div className=' flex justify-center bg-gray-300'>
              <MobileMockups />
            </div>
          </div>
        </div>
      </div>
    </>
  )
}
